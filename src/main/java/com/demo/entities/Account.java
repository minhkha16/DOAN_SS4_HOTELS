package com.demo.entities;
// Generated Feb 26, 2024, 1:59:46â€¯PM by Hibernate Tools 4.3.6.Final
import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Pattern;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.validator.constraints.Length;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "booking_hotel")
public class Account implements java.io.Serializable {

	private Integer id;
	private Role role;
	@NotEmpty
	@Length(min = 3, max = 250)
	private String username;
	@NotEmpty
//	@Pattern(regexp = "((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})")
	private String password;
	@NotEmpty
	@Length(min = 3, max = 250)
	private String fullname;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date birthday;
	private Integer status;
	@NotEmpty
	@Length(min = 3, max = 250)
	private String address;
	@NotEmpty
	@Email
	private String email;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date created;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date updateted;
	private Set<Evaluate> evaluates = new HashSet<Evaluate>(0);
	private Set<Book> books = new HashSet<Book>(0);
	private Set<Hotel> hotels = new HashSet<Hotel>(0);

	public Account() {
	}

	public Account(Role role) {
		this.role = role;
	}

	public Account(Role role, String username, String password, String fullname, Date birthday, Integer status,
			String address, String email, Date created, Date updateted, Set<Evaluate> evaluates, Set<Book> books,
			Set<Hotel> hotels) {
		this.role = role;
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.birthday = birthday;
		this.status = status;
		this.address = address;
		this.email = email;
		this.created = created;
		this.updateted = updateted;
		this.evaluates = evaluates;
		this.books = books;
		this.hotels = hotels;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "username", length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullname", length = 250)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "address", length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "email", length = 150)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updateted", length = 10)
	public Date getUpdateted() {
		return this.updateted;
	}

	public void setUpdateted(Date updateted) {
		this.updateted = updateted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Evaluate> getEvaluates() {
		return this.evaluates;
	}

	public void setEvaluates(Set<Evaluate> evaluates) {
		this.evaluates = evaluates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Book> getBooks() {
		return this.books;
	}

	public void setBooks(Set<Book> books) {
		this.books = books;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Hotel> getHotels() {
		return this.hotels;
	}

	public void setHotels(Set<Hotel> hotels) {
		this.hotels = hotels;
	}

}
