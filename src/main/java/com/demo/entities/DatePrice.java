package com.demo.entities;
// Generated Feb 26, 2024, 1:59:46â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.*;

/**
 * DatePrice generated by hbm2java
 */
@Entity
@Table(name = "date_price", catalog = "booking_hotel")
public class DatePrice implements java.io.Serializable {

	private Integer id;
	private Room room;
	private Integer quantityDate;
	private Integer price;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date created;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date updated;
	private Set<BookRoom> bookRooms = new HashSet<BookRoom>(0);

	public DatePrice() {
	}

	public DatePrice(Room room, Integer quantityDate, Integer price, Date created, Date updated,
			Set<BookRoom> bookRooms) {
		this.room = room;
		this.quantityDate = quantityDate;
		this.price = price;
		this.created = created;
		this.updated = updated;
		this.bookRooms = bookRooms;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "room_id")
	public Room getRoom() {
		return this.room;
	}

	public void setRoom(Room room) {
		this.room = room;
	}

	@Column(name = "quantity_date")
	public Integer getQuantityDate() {
		return this.quantityDate;
	}

	public void setQuantityDate(Integer quantityDate) {
		this.quantityDate = quantityDate;
	}

	@Column(name = "price")
	public Integer getPrice() {
		return this.price;
	}

	public void setPrice(Integer price) {
		this.price = price;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated", length = 10)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datePrice")
	public Set<BookRoom> getBookRooms() {
		return this.bookRooms;
	}

	public void setBookRooms(Set<BookRoom> bookRooms) {
		this.bookRooms = bookRooms;
	}

}
