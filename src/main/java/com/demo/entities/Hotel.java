package com.demo.entities;
// Generated Feb 26, 2024, 1:59:46â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.validator.constraints.Length;
import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.*;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotEmpty;

/**
 * Hotel generated by hbm2java
 */
@Entity
@Table(name = "hotel", catalog = "booking_hotel")
public class Hotel implements java.io.Serializable {

	private Integer id;
	private Account account;
	private Area area;
	private Category category;
	@NotEmpty
	@Length(min = 3, max = 250)
	private String name;
	@NotEmpty
	@Length(min = 3, max = 500)
	private String content;
	private Integer status;
	@NotEmpty
	@Length(min = 3, max = 250)
	private String address;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date created;
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	private Date updated;
	private String image;
	private Set<Evaluate> evaluates = new HashSet<Evaluate>(0);
	private Set<Room> rooms = new HashSet<Room>(0);

	public Hotel() {
	}

	public Hotel(Account account, Area area, Category category) {
		this.account = account;
		this.area = area;
		this.category = category;
	}

	public Hotel(Account account, Area area, Category category, String name, String content, Integer status,
			String address, Date created, Date updated, String image, Set<Evaluate> evaluates, Set<Room> rooms) {
		this.account = account;
		this.area = area;
		this.category = category;
		this.name = name;
		this.content = content;
		this.status = status;
		this.address = address;
		this.created = created;
		this.updated = updated;
		this.image = image;
		this.evaluates = evaluates;
		this.rooms = rooms;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false)
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "area_id", nullable = false)
	public Area getArea() {
		return this.area;
	}

	public void setArea(Area area) {
		this.area = area;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "name", length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "content", length = 250)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "address", length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated", length = 10)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "image", length = 250)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<Evaluate> getEvaluates() {
		return this.evaluates;
	}

	public void setEvaluates(Set<Evaluate> evaluates) {
		this.evaluates = evaluates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}

}
